---------------------- hyperV -----------------------
https://blog.csdn.net/rai369963/article/details/83450947

有时候yum下载时速度很慢，可以考虑清除缓存并更新
yum clean all
yum makecache
yum update

linux8 网络启动
###https://blog.csdn.net/qq_37960324/article/details/103007035
nmcli connection up eth0
nmcli connection down eth0
nmcli connection reload

systemctl status keepalived
systemctl list-unit-files --type=service | grep httpd

时间同步
###https://jingyan.baidu.com/article/3ea51489d16ac752e61bba88.html
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime -R
echo "$(date +%F) $(date +%T)" 





----------------------- git -----------------------
----Your branch is up-to-date with 'origin/master'
###https://blog.csdn.net/qq_33912215/article/details/89000254







----------------------- docker -----------------------
###https://docs.docker.com/engine/install/centos/

sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine

sudo yum install -y yum-utils

sudo yum-config-manager \
--add-repo https://download.docker.com/linux/centos/docker-ce.repo

sudo yum list docker-ce --showduplicates | sort -r

sudo yum install -y docker-ce docker-ce-cli containerd.io

sudo systemctl start docker

###https://www.cnblogs.com/wangjq19920210/p/9287545.html
vi /etc/docker/daemon.json
{ 
    "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"] 
}


-v /your_directory/mysql/data:/var/lib/mysql	挂载数据库数据
-e MYSQL_ROOT_PASSWORD=your_password	数据库root用户的密码
mysql                                            		镜像名
--name your_db_name			定义的容器名
-d					后台运行容器






----------------------- mysql standalone -----------------------
###https://registry.hub.docker.com/_/mysql
###https://blog.csdn.net/king_qc/article/details/94454319
###https://www.cnblogs.com/l10n/p/12606582.html
###https://www.cnblogs.com/clement-jiao/articles/9032193.html
###https://www.cnblogs.com/hu308830232/p/15211720.html
###https://www.freebytes.net/it/java/dokcer-mysql-binlog.html

%%%%%%%%%my.cnf%%%%%%%%%
[client]
default-character-set = utf8mb4
[mysql]
default-character-set = utf8mb4
[mysqld]
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
back_log = 512
key_buffer_size = 64M
max_connections = 200
log-bin = mysql-bin  
server-id = 1
binlog_format = MIXED
expire_logs_days = 30
#从库只读 https://www.cnblogs.com/sandea/p/9467176.html
#read_only = 1

sudo docker run -itd -p 3306:3306 \
--name=mysql_standalone_21_3306 \
-v /home/mysql/standalone3306/data:/var/lib/mysql \
-v /home/mysql/standalone3306/conf:/etc/mysql/conf.d \
-v /home/mysql/standalone3306/log:/var/log/mysql \
-e MYSQL_ROOT_PASSWORD=ban \
--privileged=true \
mysql



------------ mysql cluster ------------
###https://www.cnblogs.com/dw3306/p/13943008.html
###https://www.cnblogs.com/bdicaprio/articles/9877525.html
###https://blog.51cto.com/phpervip/2064296

%%%%%%%%%---192.168.137.21---%%%%%%%%%
sudo docker run -itd -p 3307:3306 \
--name=mysql_cluster_master_21_3307 \
-v /home/mysql/cluster3307/data:/var/lib/mysql \
-v /home/mysql/cluster3307/conf:/etc/mysql/conf.d \
-v /home/mysql/cluster3307/log:/var/log/mysql \
-e MYSQL_ROOT_PASSWORD=ban \
--privileged=true \
mysql

%%%%%%%%%---192.168.137.22---%%%%%%%%%
sudo docker run -itd -p 3307:3306 \
--name=mysql_cluster_slave_22_3307 \
-v /home/mysql/cluster3307/data:/var/lib/mysql \
-v /home/mysql/cluster3307/conf:/etc/mysql/conf.d \
-v /home/mysql/cluster3307/log:/var/log/mysql \
-e MYSQL_ROOT_PASSWORD=ban \
--privileged=true \
mysql

%%%%%%%%%------exec sql------%%%%%%%%%
show master status;

CHANGE MASTER TO master_host = '192.168.137.21',
master_port = 3307,
master_user = 'root',
master_password = 'ban',
master_log_file = 'mysql-bin.000004',
master_log_pos = 156;

show slave status;
select * from performance_schema.replication_applier_status_by_worker;

stop slave;
reset slave all;
set global sql_slave_skip_counter=1;
start slave;



------------ mysql hot standby ------------
###https://www.cnblogs.com/jianmingyuan/p/10903682.html

%%%%%%%%%my.cnf%%%%%%%%%
[client]
default-character-set = utf8mb4
[mysql]
default-character-set = utf8mb4
[mysqld]
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
back_log = 512
key_buffer_size = 64M
max_connections = 200
log-bin = mysql-bin  
server-id = 21
binlog_format = MIXED
expire_logs_days = 30
#主-主配置
binlog-do-db = nacos
binlog-ignore-db = mysql
log-slave-updates
sync_binlog = 1
auto_increment_offset = 1
auto_increment_increment = 2
replicate-do-db = nacos
replicate-ignore-db = mysql,information_schema

%%%%%%%%%---192.168.137.21---%%%%%%%%%
sudo docker run -itd -p 3308:3306 \
--name=mysql_double_master_21_3308 \
-v /home/mysql/double_master3308/data:/var/lib/mysql \
-v /home/mysql/double_master3308/conf:/etc/mysql/conf.d \
-v /home/mysql/double_master3308/log:/var/log/mysql \
-e MYSQL_ROOT_PASSWORD=ban \
--privileged=true \
mysql

%%%%%%%%%---192.168.137.22---%%%%%%%%%
sudo docker run -itd -p 3308:3306 \
--name=mysql_double_master_22_3308 \
-v /home/mysql/double_master3308/data:/var/lib/mysql \
-v /home/mysql/double_master3308/conf:/etc/mysql/conf.d \
-v /home/mysql/double_master3308/log:/var/log/mysql \
-e MYSQL_ROOT_PASSWORD=ban \
--privileged=true \
mysql

%%%%%%%%%------exec sql------%%%%%%%%%
show master status;

change master to
master_host='192.168.137.21', master_port=3308, master_user='root', master_password='ban',
master_log_file='mysql-bin.000003', master_log_pos=693;

start slave;
show slave status;
select * from performance_schema.replication_applier_status_by_worker;
stop slave;
reset slave all;






----------------------- nginx ----------------------- 
###https://registry.hub.docker.com/_/nginx
###https://www.runoob.com/docker/docker-install-nginx.html

sudo docker run -itd -p 8849:80 \
-v /home/nginx/html:/usr/share/nginx/html \
-v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \
-v /home/nginx/log:/var/log/nginx \
--name nginx_nacos_21_8849 \
nginx

%%%%%%%%%nginx.conf%%%%%%%%%
#工作进程数 1,不要超过计算机的核数,四核配置4,八核配置8
worker_processes  1;
#工作连接数,也就是线程,一个进程有1024个线程,
events {
    worker_connections  1024;
}
#http请求配置
http {
    default_type  application/octet-stream;
    #sendfile为发送文件,要on开启
    sendfile        on;
    #keepalive_timeout超时时间
    keepalive_timeout  60;

    upstream nacos {
        server 192.168.137.21:8848 weight=1;
        server 192.168.137.22:8848 weight=2;
        server 192.168.137.23:8848 weight=3;
    }
    server {
        #监听的端口,这里为80
        listen       80;
        #server_name就是域名,
        #server_name  localhost;
		
        #location域名代理地址 / 代表所有请求路径
        location / {
            proxy_pass http://nacos;
        }
    }
}






----------------------- keepalived -----------------------
###https://blog.51cto.com/andyxu/2286045
###https://www.cnblogs.com/xxoome/p/8621677.html
###https://blog.csdn.net/wngua/article/details/54668794
###https://www.jianshu.com/p/fdc0a788f55a/

wget http://www.keepalived.org/software
###yum install -y gcc openssl-devel popt-devel
###yum install -y make automake autoconf libtool
cd keepalived-2.2.4
./configure --prefix=/home/keepalived/install
make && make install
-- test
cp /home/keepalived/keepalived-2.2.4/keepalived/etc/keepalived/keepalived.conf /home/keepalived/install/sbin
-- auto start
###https://www.cnblogs.com/sky-cheng/p/10768318.html
cp /home/keepalived/install/sbin/keepalived /usr/sbin/
mkdir /etc/keepalived
cp /home/keepalived/install/sbin/keepalived.conf /etc/keepalived/
cp /home/keepalived/install/etc/sysconfig/keepalived /etc/sysconfig/
cp /home/keepalived/keepalived-2.2.4/keepalived/etc/init.d/keepalived /etc/init.d/
chmod +x /etc/init.d/keepalived
vi /lib/systemd/system/keepalived.service
chkconfig --add keepalived
systemctl enable keepalived
tail -f /var/log/messages


%%%%%%%%%keepalived.conf%%%%%%%%%%
! Configuration File for keepalived
global_defs {
    #一个没重复的名字即可
    router_id nacos_nginx_21_8849
    # 多播模式
    # vrrp_strict
}
# 检测nginx是否运行
# vrrp_script chk_nginx {
#         script "/etc/keepalived/nginx_check.sh"
#         interval 2
#         weight -20
# }
vrrp_instance VI_1 {
    # 此处不设置为MASTER，通过priority来竞争master
    state BACKUP
    # 网卡名字，文章下方会给出如何获取网卡名字的方法
    interface eth0
    # 同一个keepalived集群的virtual_router_id相同
    virtual_router_id 51
    # 权重，master要大于slave
    priority 100
    # 主备通讯时间间隔
    advert_int 1
    # 如果两节点的上联交换机禁用了组播，则采用vrrp单播通告的方式
    # 本机ip
    unicast_src_ip 192.168.137.21
    unicast_peer {
        # 其他机器ip
        192.168.137.22
    }
    # 设置nopreempt防止抢占资源
    nopreempt
    # 主备保持一致
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    # 与上方nginx运行状况检测呼应
    # track_script {
    #     chk_nginx
    # }
    virtual_ipaddress {
        # 虚拟ip地址（VIP，一个尚未占用的内网ip即可）
        192.168.137.20
    }
}
---- Unicast peers are not supported in strict mode
###https://blog.csdn.net/qq_29974229/article/details/120760434





----------------------- nacos standalone mysql standalone -----------------------
###https://registry.hub.docker.com/r/nacos/nacos-server
###https://nacos.io/zh-cn/docs/quick-start-docker.html
###https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql

sudo docker run -itd -p 8848:8848 \
--name nacos_mysql_standalone_21_8848 \
--env MODE=standalone \
--env NACOS_SERVER_IP=192.168.137.21 \
--env NACOS_APPLICATION_PORT=8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=1 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3306 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server



----------------------- nacos standalone mysql cluster -----------------------
sudo docker run -itd -p 8848:8848 \
--name nacos_standalone_mysql_cluster_21_8848 \
--env MODE=standalone \
--env NACOS_SERVER_IP=192.168.137.21 \
--env NACOS_APPLICATION_PORT=8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=2 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3308 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env MYSQL_SLAVE_SERVICE_HOST=192.168.137.22 \
--env MYSQL_SLAVE_SERVICE_PORT=3308 \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server

%%%%%%%Nacos BUG%%%%%%%%%
vi application.properties
add MYSQL_SLAVE_SERVICE_HOST & MYSQL_SLAVE_SERVICE_PORT



----------------------- nacos cluster mysql standalone -----------------------
###https://nacos.io/zh-cn/docs/quick-start-docker.html
###https://www.cnblogs.com/yscec/p/13670568.html
###https://blog.csdn.net/weixin_44790046/article/details/106857369
###https://blog.csdn.net/xu990128638/article/details/119492529
###https://blog.csdn.net/qq_39099625/article/details/118610964

%%%%%%%%%192.168.137.21%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_cluster_mysql_standalone_21_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.21 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=1 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3306 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server

%%%%%%%%%192.168.137.22%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_cluster_mysql_standalone_22_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.22 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=1 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3306 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server

%%%%%%%%%192.168.137.23%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_cluster_mysql_standalone_23_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.23 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=1 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3306 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server


 
----------------------- nacos cluster mysql cluster -----------------------
### vi nacos application.properties

%%%%%%%%%192.168.137.21%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_mysql_cluster_21_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.21 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=2 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3308 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env MYSQL_SLAVE_SERVICE_HOST=192.168.137.22 \
--env MYSQL_SLAVE_SERVICE_PORT=3308 \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server

%%%%%%%%%192.168.137.22%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_mysql_cluster_22_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.22 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=2 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3308 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env MYSQL_SLAVE_SERVICE_HOST=192.168.137.22 \
--env MYSQL_SLAVE_SERVICE_PORT=3308 \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server

%%%%%%%%%192.168.137.23%%%%%%%%%
sudo docker run -itd -p 8848:8848 \
-p 7848:7848 \
-p 9848:9848 \
-p 9849:9849 \
--name nacos_mysql_cluster_23_8848 \
--env MODE=cluster \
--env NACOS_SERVER_IP=192.168.137.23 \
--env NACOS_APPLICATION_PORT=8848 \
--env NACOS_SERVERS=192.168.137.21:8848,192.168.137.22:8848,192.168.137.23:8848 \
--env SPRING_DATASOURCE_PLATFORM=mysql \
--env MYSQL_DATABASE_NUM=2 \
--env MYSQL_SERVICE_HOST=192.168.137.21 \
--env MYSQL_SERVICE_PORT=3308 \
--env MYSQL_SERVICE_DB_NAME=nacos \
--env MYSQL_SERVICE_USER=root \
--env MYSQL_SERVICE_PASSWORD=ban \
--env MYSQL_SLAVE_SERVICE_HOST=192.168.137.22 \
--env MYSQL_SLAVE_SERVICE_PORT=3308 \
--env JVM_XMS=640m \
--env JVM_XMX=640m \
--env JVM_XMN=256m \
--env JVM_MS=128m \
--env JVM_MMS=256m \
--privileged=true \
nacos/nacos-server






----------------------- sentinel -----------------------
###https://www.jianshu.com/p/373eb512ec48
###https://www.jianshu.com/p/c47dfd25eeee
###https://www.cnblogs.com/fanshuyao/p/14606396.html
###https://www.cnblogs.com/crazymakercircle/p/14285001.html

docker pull bladex/sentinel-dashboard

sudo docker run -itd -p 8858:8858 \
-p 8719:8719 \
--name sentinel_21_8858 \
bladex/sentinel-dashboard

export JAVA_HOME=/home/jdk/jdk-11.0.13
export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH

nohup java -Dserver.port=8070 -Dcsp.sentinel.dashboard.server=localhost:8070 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard-1.8.1.jar &
---Dcsp.sentinel.log.dir=C:\logs\sentinel-dashboard

不注册Sentinel自己
java -Dserver.port=8070 -Dcsp.sentinel.log.dir=C:\logs\sentinel-dashboard -jar sentinel-dashboard-1.8.1.jar

注册Sentinel自己
java -Dserver.port=8070 -Dcsp.sentinel.dashboard.server=localhost:8070 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.log.dir=C:\logs\sentinel-dashboard -jar sentinel-dashboard-1.8.1.jar


###https://blog.csdn.net/yiyihuazi/article/details/110821772

#切换目录
cd /etc/init.d
#创建脚本
vi sentinel
 
#脚本内容
#!/bin/bash
#
# chkconfig: 2345 10 90
# 
# description:auto_run
#程序名
RUN_NAME="sentinel-dashboard-1.8.0.jar"
#jar 位置
JAVA_OPTS=/opt/module/alibaba/sentinel/sentinel-dashboard-1.8.0.jar
LOG_OPTS=/opt/module/alibaba/sentinel/sentinel_temp.log
#开始方法
start() {
        source /etc/profile; nohup java -Xms256M -Xmx512M -XX:PermSize=128M -XX:MaxPermSize=256M -Dserver.port=9100 -Dcsp.sentinel.dashboard.server=10.139.10.101:9100 -Dproject.name=Sentinel基本控制台 -jar $JAVA_OPTS >$LOG_OPTS 2>&1 &
        echo "$RUN_NAME started success."
}
#结束方法
stop() {
        echo "stopping $RUN_NAME ..."
        kill -9 `ps -ef|grep $JAVA_OPTS|grep -v grep|grep -v stop|awk '{print $2}'`
}
case "$1" in
        start)
            start
            ;;
        stop)
            stop
            ;;
        restart)
            stop
            start
            ;;
        *)
   echo "Userage: $0 {start|stop|restart}"
   exit 1
esac
















